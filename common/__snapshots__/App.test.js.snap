// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App asyncComponentDidMount initialises correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(HomeScreenContainer) />
</Provider>
`;

exports[`App render renders nothing before mounting and initialising 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "marginVertical": 40,
        "width": "100%",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 20,
          "margin": 10,
          "textAlign": "center",
        }
      }
    >
      Hello 90poe!
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": undefined,
          "marginBottom": 5,
          "textAlign": "center",
        }
      }
    >
      This is the ðŸ“± app
    </Text>
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={25}
      invertStickyHeaders={undefined}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "marginVertical": 20,
        }
      }
      updateCellsBatchingPeriod={50}
      windowSize={21}
    >
      <View />
    </RCTScrollView>
  </View>
</View>
`;
